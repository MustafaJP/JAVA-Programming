#BlueJ class context
comment0.target=TEST1
comment1.params=parser
comment1.target=org.apache.commons.csv.CSVRecord\ coldestHourInFiles(org.apache.commons.csv.CSVParser)
comment10.params=parser\ value
comment10.target=double\ averageTemperatureWithHighHumidityInFile(org.apache.commons.csv.CSVParser,\ int)
comment11.params=
comment11.target=void\ testAverageTemperatureInFile()
comment12.params=
comment12.target=void\ testAverageTemperatureWithHighHumidityInFile()
comment13.params=
comment13.target=void\ testLowestHumidityInFiles()
comment14.params=
comment14.target=void\ testLowestHumidityInManyFiles()
comment15.params=
comment15.target=void\ testFileWithColdestTemperature()
comment16.params=
comment16.target=void\ testColdestInManyDays()
comment17.params=
comment17.target=void\ testcoldestHourInFile()
comment2.params=
comment2.target=org.apache.commons.csv.CSVRecord\ coldestInManyDays()
comment3.params=
comment3.target=java.lang.String\ fileWithColdestTemperature()
comment4.params=currentRow\ smallestSoFar
comment4.target=org.apache.commons.csv.CSVRecord\ getSmallestOfTemperature(org.apache.commons.csv.CSVRecord,\ org.apache.commons.csv.CSVRecord)
comment5.params=parser
comment5.target=void\ printAllContents(org.apache.commons.csv.CSVParser)
comment6.params=parser
comment6.target=org.apache.commons.csv.CSVRecord\ lowestHumidityInFile(org.apache.commons.csv.CSVParser)
comment7.params=
comment7.target=org.apache.commons.csv.CSVRecord\ lowestHumidityInManyFile()
comment8.params=currentRow\ smallestSoFar
comment8.target=org.apache.commons.csv.CSVRecord\ getSmallestOfHumidity(org.apache.commons.csv.CSVRecord,\ org.apache.commons.csv.CSVRecord)
comment9.params=parser
comment9.target=double\ averageTemperatureInFile(org.apache.commons.csv.CSVParser)
numComments=18
